{"version":3,"sources":["components/subscription/Provider.js","components/subscription/Buttons.js","components/PersonalInfo.js","components/Selection.js","components/Total.js","components/Submit.js","components/Purchase.js","components/subscription/Form.js","App.js","index.js"],"names":["steps","id","SubscriptionContext","createContext","useSubscription","useContext","SubscriptionProvider","children","useState","type","title","value","length","name","surname","address","city","state","zip","subscription","setSubscription","useStep","initialStep","step","navigation","alert","setAlert","Provider","SubscriptionButtons","next","previous","className","onClick","e","obj","key","checkProperties","setTimeout","handleChange","target","Form","Row","Group","as","Col","controlId","Label","Control","placeholder","onChange","required","defaultValue","options","selectTitle","handleTypeSelection","prevState","console","log","sm","map","option","Check","label","checked","Total","months","parseInt","split","total","discount","oneMonthPrice","totalMonth","getTotalPrice","Submit","Accordion","defaultActiveKey","Card","Header","Toggle","Button","variant","eventKey","Collapse","Body","Purchase","JSON","stringify","Spinner","animation","SubscriptionForm","Selection","subTypes","subLengths","PersonalInfo","App","Alert","show","render","document","getElementById"],"mappings":"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","file":"static/js/main.935bb5ec.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from \"react\"\nimport { useStep } from \"react-hooks-helper\"\n\nconst steps = [\n  { id: \"type\" },\n  { id: \"length\" },\n  { id: \"personalInfo\" },\n  { id: \"submit\" },\n  { id: \"purchase\" },\n]\n\nconst SubscriptionContext = createContext()\nexport const useSubscription = () => useContext(SubscriptionContext)\n\nexport const SubscriptionProvider = ({ children }) => {\n  const [subscription, setSubscription] = useState({\n    type: { title: null, value: null },\n    length: { title: null, value: null },\n    name: \"\",\n    surname: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n  })\n  const { step, navigation } = useStep({ initialStep: 0, steps })\n  const [alert, setAlert] = useState(false)\n\n  return (\n    <SubscriptionContext.Provider\n      value={{\n        subscription,\n        setSubscription,\n        step,\n        navigation,\n        alert,\n        setAlert,\n      }}\n    >\n      {children}\n    </SubscriptionContext.Provider>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { useSubscription } from \"./Provider\"\n\nfunction checkProperties(obj) {\n  for (let key in obj) {\n    if (obj[key] == null || obj[key] === \"\") return false\n  }\n  return true\n}\n\nexport const SubscriptionButtons = () => {\n  const { step, navigation, subscription, setAlert } = useSubscription()\n  const { next, previous } = navigation\n  const goNext = (e) => {\n    // validate presence of input on current step ||\n    // validate all input (at the last step)\n    if (subscription[step.id]?.title || checkProperties(subscription)) {\n      setAlert(false)\n      next()\n    } else {\n      setAlert(true)\n      setTimeout(() => setAlert(false), 1500)\n    }\n  }\n  const goPrevious = () => {\n    previous()\n  }\n\n  if (step.id === \"purchase\") {\n    return null\n  }\n\n  return (\n    <>\n      {step.id !== \"type\" && (\n        <button className=\"btn btn-primary\" onClick={goPrevious}>\n          Previous\n        </button>\n      )}\n      <button className=\"btn btn-primary\" onClick={goNext}>\n        {step.id !== \"submit\" ? \"Next\" : \"Purchase\"}\n      </button>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Col, Form } from \"react-bootstrap\"\nimport { useSubscription } from \"./subscription/Provider\"\n\nexport default () => {\n  const { subscription, setSubscription } = useSubscription()\n\n  const handleChange = (e) => {\n    setSubscription({ ...subscription, [e.target.name]: e.target.value })\n  }\n  return (\n    <>\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Name\"\n            name=\"name\"\n            onChange={handleChange}\n            value={subscription.name}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridSurname\">\n          <Form.Label>Surname</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Surname\"\n            name=\"surname\"\n            onChange={handleChange}\n            value={subscription.surname}\n          />\n        </Form.Group>\n      </Form.Row>\n      <Form.Group controlId=\"formGridAddress1\">\n        <Form.Label>Address</Form.Label>\n        <Form.Control\n          placeholder=\"1234 Main St\"\n          name=\"address\"\n          onChange={handleChange}\n          value={subscription.address}\n        />\n      </Form.Group>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridCity\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            name=\"city\"\n            onChange={handleChange}\n            value={subscription.city}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridState\">\n          <Form.Label>State</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"state\"\n            onChange={handleChange}\n            defaultValue=\"\"\n          >\n            <option></option>\n            <option>Central</option>\n            <option>South</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridZip\">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control\n            name=\"zip\"\n            onChange={handleChange}\n            value={subscription.zip}\n          />\n        </Form.Group>\n      </Form.Row>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Col, Form } from \"react-bootstrap\"\nimport { useSubscription } from \"./subscription/Provider\"\n\nexport default ({ options, selectTitle }) => {\n  const { subscription, setSubscription } = useSubscription()\n\n  const handleTypeSelection = (e) => {\n    const { name, value, id } = e.target\n    setSubscription((prevState) => ({\n      ...prevState,\n      [name]: { title: value, value: id },\n    }))\n    console.log(subscription)\n  }\n\n  return (\n    <>\n      <Form.Label as=\"legend\">Select subscription {selectTitle}</Form.Label>\n      <Col sm={15}>\n        {options.map((option, id) => (\n          <Form.Check\n            type=\"radio\"\n            label={option.title}\n            key={id}\n            value={option.title}\n            name={selectTitle}\n            id={option.value}\n            onChange={handleTypeSelection}\n            checked={subscription[selectTitle].title === option.title}\n          />\n        ))}\n      </Col>\n    </>\n  )\n}\n","import React from \"react\"\nimport { useSubscription } from \"./subscription/Provider\"\n\nfunction getTotalPrice(type, months = 1, discount = 1) {\n  const oneMonthPrice = parseInt(type)\n  const totalMonth = parseInt(months)\n  return (\n    oneMonthPrice * totalMonth - (totalMonth * oneMonthPrice * discount) / 100\n  )\n}\n\nexport const Total = () => {\n  const { subscription } = useSubscription()\n\n  const type = subscription.type\n  const length = subscription.length\n\n  if (length.value || length.value == 0) {\n    const months = parseInt(length.title.split(\" \")[0])\n    var total = getTotalPrice(type.value, months, length.value)\n  }\n\n  return (\n    <>\n      <h3>Total:</h3>\n      <p>\n        <b>Subscription type: </b> <br></br>\n        {type.title && `${type.title} - (${type.value}$ per month)`}\n      </p>\n\n      <p>\n        <b>Subscription length:</b>\n        <br></br> {length.title && length.title}\n      </p>\n\n      <p>\n        <b>Total Price:</b> {total && total + \"$\"}\n      </p>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Accordion, Card, Button } from \"react-bootstrap\"\nimport { useSubscription } from \"./subscription/Provider\"\nimport { Total } from \"./Total\"\n\nexport const Submit = () => {\n  const { subscription } = useSubscription()\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Subscription Type(Click me!)\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <h2>{subscription.type.title}</h2>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n              Subscription Length(Click me!)\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n              <h2>{subscription.length.title}</h2>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n              Personal Information(Click me!)\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"2\">\n            <Card.Body>\n              <ul>\n                <li>\n                  {\" \"}\n                  <span>Name:</span>\n                  {subscription.name}\n                </li>\n                <li>\n                  {\" \"}\n                  <span>Surname:</span>\n                  {subscription.surname}\n                </li>\n                <li>\n                  {\" \"}\n                  <span>Address:</span>\n                  {subscription.address}\n                </li>\n                <li>\n                  {\" \"}\n                  <span>City:</span>\n                  {subscription.city}\n                </li>\n                <li>\n                  {\" \"}\n                  <span>State:</span>\n                  {subscription.state}\n                </li>\n                <li>\n                  {\" \"}\n                  <span>ZIP:</span>\n                  {subscription.zip}\n                </li>\n              </ul>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\n              Total(Click me!)\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"3\">\n            <Card.Body>\n              <Total />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Spinner } from \"react-bootstrap\"\nimport { useSubscription } from \"./subscription/Provider\"\n\nexport const Purchase = () => {\n  const { subscription } = useSubscription()\n  console.log(JSON.stringify(subscription))\n  return (\n    <>\n      <h3>Waiting for response from payment system...</h3>\n      <Spinner animation=\"border\" className=\"text-center\" />\n      <p>(Look at Console to see JSON)</p>\n    </>\n  )\n}\n","import React from \"react\"\n\nimport PersonalInfo from \"../PersonalInfo\"\nimport Selection from \"../Selection\"\nimport { Submit } from \"../Submit\"\nimport { subTypes, subLengths } from \"../../data/subscription-data.json\"\nimport { useSubscription } from \"./Provider\"\nimport { Purchase } from \"../Purchase\"\n\nexport const SubscriptionForm = () => {\n  const { step } = useSubscription()\n  const { id } = step\n  switch (id) {\n    case \"type\":\n      return <Selection options={subTypes} selectTitle=\"type\" />\n    case \"length\":\n      return <Selection options={subLengths} selectTitle=\"length\" />\n    case \"personalInfo\":\n      return <PersonalInfo />\n    case \"submit\":\n      return <Submit />\n    case \"purchase\":\n      return <Purchase />\n    default:\n      return null\n  }\n}\n\n// export default SubscriptionForm\n","import React from \"react\"\nimport { Alert, Col, Row } from \"react-bootstrap\"\nimport { SubscriptionButtons } from \"./components/subscription/Buttons\"\nimport { SubscriptionForm } from \"./components/subscription/Form\"\nimport { useSubscription } from \"./components/subscription/Provider\"\nimport { Total } from \"./components/Total\"\n\nfunction App() {\n  const { alert } = useSubscription()\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1>Subscription ordering app</h1>\n          <Alert show={alert} variant=\"warning\">\n            Something went wrong :( Please Check Your Input\n          </Alert>\n          <SubscriptionForm />\n          <Row>\n            <Col sm={6}>\n              <SubscriptionButtons />\n            </Col>\n            <Col sm={6}>\n              <div className=\"total text-right\">\n                <Total />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport { render } from \"react-dom\"\nimport \"./App.scss\"\nimport App from \"./App\"\nimport { SubscriptionProvider } from \"./components/subscription/Provider\"\n\nrender(\n  <SubscriptionProvider>\n    <App />\n  </SubscriptionProvider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}